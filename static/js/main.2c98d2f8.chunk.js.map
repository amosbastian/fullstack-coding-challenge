{"version":3,"sources":["assets/images/unbabel-logo.svg","components/header/Header.js","utilities.js","components/translator/language-bar/language-selector/LanguageSelector.js","components/translator/language-bar/swap-language-button/SwapLanguageButton.js","components/translator/language-bar/LanguageBar.js","components/translator/translation/Translation.js","components/translator/translation-list/TranslationList.js","components/translator/translator-text/TranslatorText.js","components/translator/Translator.js","components/application/Application.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","shortnameToNameMapper","pt","en","fr","es","ru","ar","de","ja","tr","it","nl","hi","shortnameToFlagMapper","code","svg","styleProps","width","height","shortnameToFlag","shortname","shortnameToName","sortByTranslatedText","a","b","translated_text","length","LanguageSelector","children","SwapLanguageButton","onClick","type","id","d","xlinkHref","overflow","clipPath","languageMap","LanguageBar","sourceLanguage","targetLanguage","statusMapper","new","translating","canceled","failed","rejected","accepted","completed","Translation","translation","deleteTranslation","deleteLoading","useState","showDelete","setShowDelete","translatedText","sizeUnit","size","color","loading","flipId","uid","onMouseEnter","onMouseLeave","source_language","target_language","status","text","TranslationList","translations","allTranslations","map","key","Fragment","forEach","console","log","TranslatorText","handleChange","handleClear","handleKeyDown","handleSubmit","translationText","onSubmit","placeholder","value","onChange","disabled","onKeyDown","event","xmlns","viewBox","fill","css","eventSource","EventSource","undefined","Translator","loadingTranslations","setLoadingTranslations","loadingNewTranslation","setLoadingNewTranslation","setSourceLanguage","setTargetLanguage","setTranslationText","translationList","setTranslationList","setDeleteLoading","notify","message","toast","handleTextSubmit","preventDefault","axios","post","response","newTranslation","data","oldList","sort","translationUid","delete","filter","useEffect","onmessage","updatedTranslations","currentTranslations","updatedTranslation","translationIndex","findIndex","x","upsertTranslations","JSON","parse","didCancel","get","fetchTranslations","source","target","shiftKey","flipKey","join","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","Application","Boolean","window","location","hostname","match","defaults","baseURL","process","headers","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c98d2f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unbabel-logo.6a891f45.svg\";","import React from 'react';\nimport logo from '../../assets/images/unbabel-logo.svg';\n\nconst Header = () => (\n  <header className=\"bg-indigo-600 flex items-center justify-baseline px-4 py-3 w-full\">\n    <div>\n      <img className=\"h-6\" src={logo} alt=\"Unbabel\"></img>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport ReactCountryFlag from 'react-country-flag';\n\nconst shortnameToNameMapper = {\n  pt: 'Portuguese',\n  en: 'English',\n  fr: 'French',\n  es: 'Spanish',\n  'zh-CN': 'Chinese (simplified)',\n  ru: 'Russian',\n  ar: 'Arabic',\n  de: 'German',\n  ja: 'Japanese',\n  tr: 'Turkish',\n  it: 'Italian',\n  nl: 'Dutch',\n  hi: 'Hindi',\n  'es-latam': 'Spanish(Latam)',\n};\n\nconst shortnameToFlagMapper = {\n  en: (\n    <ReactCountryFlag\n      code=\"gb-eng\"\n      svg\n      styleProps={{\n        width: '17px',\n        height: '17px',\n      }}\n    ></ReactCountryFlag>\n  ),\n  es: (\n    <ReactCountryFlag\n      code=\"es\"\n      svg\n      styleProps={{\n        width: '17px',\n        height: '17px',\n      }}\n    ></ReactCountryFlag>\n  ),\n};\n\nexport const shortnameToFlag = shortname => shortnameToFlagMapper[shortname];\n\nexport const shortnameToName = shortname => shortnameToNameMapper[shortname];\n\nexport const sortByTranslatedText = (a, b) => {\n  if (!a.translated_text) {\n    a.translated_text = '';\n  }\n\n  if (!b.translated_text) {\n    b.translated_text = '';\n  }\n\n  return b.translated_text.length - a.translated_text.length;\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst LanguageSelector = ({ children }) => (\n  <div className=\"text-gray-700 flex text-center items-center justify-center w-1/2 uppercase font-medium tracking-normal truncate\">\n    {children}\n  </div>\n);\n\nLanguageSelector.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default LanguageSelector;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst SwapLanguageButton = ({ onClick }) => (\n  <button\n    onClick={onClick}\n    type=\"button\"\n    className=\"block text-gray-600 flex justify-center items-center hover:text-gray-700 focus:outline-none\"\n  >\n    <svg className=\"h-6 w-6 fill-current\">\n      <defs>\n        <path id=\"a\" d=\"M0 0h24v24H0V0z\" />\n      </defs>\n      <clipPath id=\"b\">\n        <use xlinkHref=\"#a\" overflow=\"visible\" />\n      </clipPath>\n      <path\n        clipPath=\"url(#b)\"\n        d=\"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z\"\n      />\n    </svg>\n  </button>\n);\n\nSwapLanguageButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default SwapLanguageButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport LanguageSelector from './language-selector/LanguageSelector';\nimport SwapLanguageButton from './swap-language-button/SwapLanguageButton';\n\nconst languageMap = {\n  es: 'spanish',\n  en: 'english',\n};\n\nconst LanguageBar = ({ onClick, sourceLanguage, targetLanguage }) => (\n  <div className=\"flex bg-gray-100 justify-between items-center py-3\">\n    <LanguageSelector>{languageMap[sourceLanguage]}</LanguageSelector>\n    <SwapLanguageButton onClick={onClick}></SwapLanguageButton>\n    <LanguageSelector>{languageMap[targetLanguage]}</LanguageSelector>\n  </div>\n);\n\nLanguageBar.propTypes = {\n  onClick: PropTypes.func,\n  sourceLanguage: PropTypes.string,\n  targetLanguage: PropTypes.string,\n};\n\nexport default LanguageBar;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Flipped } from 'react-flip-toolkit';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport { shortnameToFlag, shortnameToName } from '../../../utilities';\n\nconst statusMapper = {\n  new: 'badge-new',\n  translating: 'badge-pending',\n  canceled: 'badge-danger',\n  failed: 'badge-danger',\n  rejected: 'badge-danger',\n  accepted: 'badge-success',\n  completed: 'badge-success',\n};\n\nconst Translation = ({ translation, deleteTranslation, deleteLoading }) => {\n  const [showDelete, setShowDelete] = useState(false);\n\n  const translatedText = translation.translated_text ? (\n    translation.translated_text\n  ) : (\n    <PulseLoader sizeUnit=\"px\" size={5} color=\"#5a67d8\" loading />\n  );\n\n  return (\n    <Flipped flipId={translation.uid}>\n      <div\n        onMouseEnter={() => setShowDelete(true)}\n        onMouseLeave={() => setShowDelete(false)}\n        className=\"flex flex-col transition transition-bg bg-white hover:bg-gray-200 border border-l-0 border-r-0 border-t-0\"\n      >\n        <div className=\"px-4 py-3 flex items-baseline justify-between mb-1 bg-gray-100\">\n          <span className=\"text-gray-500 text-sm\">\n            <span className=\"mr-2 inline-block\">\n              {shortnameToFlag(translation.source_language)}\n            </span>\n            <span className=\"hidden lg:inline-block\">\n              {shortnameToName(translation.source_language)}\n            </span>\n            &rarr;\n            <div className=\"mx-2 inline-block\">\n              {shortnameToFlag(translation.target_language)}\n            </div>\n            <span className=\"hidden lg:inline-block\">\n              {shortnameToName(translation.target_language)}\n            </span>\n          </span>\n          <span className={`badge ${statusMapper[translation.status]}`}>\n            {translation.status}\n          </span>\n        </div>\n        <div className=\"flex flex-col relative lg:flex-row py-6 leading-relaxed px-5 lg:px-6\">\n          <div className=\"flex-1 flex text-gray-600 lg:mt-0 lg:mr-5\">\n            {translation.text}\n          </div>\n          <div\n            className={`flex-1 flex items-center lg:ml-5 mt-6 text-gray-800 lg:mt-0 ${\n              !translation.translated_text ? 'justify-center' : ''\n            }`}\n          >\n            {translatedText}\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => deleteTranslation(translation.uid)}\n            className={`transition block absolute right-0 px-3 py-2 bg-red-200 text-red-800 rounded -mt-4 mr-3 shadow-lg focus:outline-none hover:bg-red-300 active:shadow w-20 ${\n              showDelete ? 'opacity-100' : 'opacity-0'\n            }`}\n          >\n            {deleteLoading ? (\n              <PulseLoader sizeUnit=\"px\" size={5} color=\"#9b2c2c\" loading />\n            ) : (\n              'Delete'\n            )}\n          </button>\n        </div>\n      </div>\n    </Flipped>\n  );\n};\n\nTranslation.propTypes = {\n  translation: PropTypes.object,\n  deleteTranslation: PropTypes.func,\n  deleteLoading: PropTypes.bool,\n};\n\nexport default Translation;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport Translation from '../translation/Translation';\n\nconst TranslationList = ({\n  loading,\n  translations,\n  deleteTranslation,\n  deleteLoading,\n}) => {\n  const allTranslations = translations.map(translation => (\n    <Translation\n      key={translation.uid}\n      translation={translation}\n      deleteTranslation={deleteTranslation}\n      deleteLoading={deleteLoading}\n    ></Translation>\n  ));\n\n  const clearAll = () => {\n    translations.forEach(translation => {\n      console.log(translation.uid);\n      deleteTranslation(translation.uid);\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        className={`flex justify-center items-center p-6 ${\n          loading ? 'opacity-100' : 'hidden'\n        }`}\n      >\n        <PulseLoader sizeUnit=\"px\" size={5} color=\"#5a67d8\" loading={loading} />\n      </div>\n      <div\n        className={`flex flex-col bg-gray-100 lg:shadow-xl transition transition-slower lg:rounded lg:overflow-hidden ${\n          loading ? 'opacity-0' : 'opacity-100'\n        }`}\n      >\n        <div\n          className={`flex justify-between bg-white px-4 py-3 border border-l-0 border-r-0 lg:border-t-0 text-sm text-gray-600 transition transition-slower ${\n            loading ? 'opacity-0' : 'opacity-100'\n          }`}\n        >\n          <div>{allTranslations.length} translations</div>\n          <button\n            onClick={clearAll}\n            type=\"button\"\n            className={`block transition text-gray-500 hover:text-gray-700 focus:outline-none transition transition-slower ${\n              translations ? 'opacity-100' : 'opacity-0'\n            }`}\n          >\n            Clear all\n          </button>\n        </div>\n        {allTranslations}\n      </div>\n    </React.Fragment>\n  );\n};\n\nTranslationList.propTypes = {\n  translations: PropTypes.array,\n  loading: PropTypes.bool,\n  deleteTranslation: PropTypes.func,\n  deleteLoading: PropTypes.bool,\n};\n\nexport default TranslationList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport BarLoader from 'react-spinners/BarLoader';\n\nconst TranslatorText = ({\n  handleChange,\n  handleClear,\n  handleKeyDown,\n  handleSubmit,\n  loading,\n  translationText,\n}) => (\n  <div className=\"shadow bg-white flex pt-3 h-40 flex flex-col\">\n    <form className=\"flex w-full h-full px-4\" onSubmit={handleSubmit}>\n      <textarea\n        placeholder=\"Translate...\"\n        className=\"text-gray-800 text-xl flex-1 p-2 m-1 bg-transparent resize-none max-h-full focus:outline-none\"\n        value={translationText}\n        onChange={handleChange}\n        disabled={loading}\n        onKeyDown={event => {\n          handleKeyDown(event);\n        }}\n      ></textarea>\n      <div className=\"ml-1 flex flex-col items-center justify-between\">\n        {translationText.length ? (\n          <button\n            type=\"button\"\n            className=\"block transition text-gray-500 hover:text-gray-600 focus:outline-none\"\n            onClick={handleClear}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              className=\"h-6 w-6 fill-current\"\n            >\n              <path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\" />\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n          </button>\n        ) : null}\n        {translationText.length ? (\n          <button\n            type=\"submit\"\n            className=\"block transition text-gray-500 hover:text-gray-600 focus:outline-none\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              className=\"h-6 w-6 fill-current\"\n            >\n              <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n              <path d=\"M19 15l-6 6-1.42-1.42L15.17 16H4V4h2v10h9.17l-3.59-3.58L13 9l6 6z\" />\n            </svg>\n          </button>\n        ) : null}\n      </div>\n    </form>\n    <div className=\"flex text-sm text-gray-500 mt-3 mb-3 pr-4 justify-end\">\n      {translationText.length} / 5000\n    </div>\n    <div className={`w-full ${loading ? 'opacity-100' : 'opacity-0'}`}>\n      <BarLoader color=\"#5a67d8\" css=\"width: 100%\" loading></BarLoader>\n    </div>\n  </div>\n);\n\nTranslatorText.propTypes = {\n  handleChange: PropTypes.func,\n  handleClear: PropTypes.func,\n  handleKeyDown: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  loading: PropTypes.bool,\n  translationText: PropTypes.string,\n};\n\nexport default TranslatorText;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Flipper } from 'react-flip-toolkit';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { sortByTranslatedText } from '../../utilities';\nimport LanguageBar from './language-bar/LanguageBar';\nimport TranslationList from './translation-list/TranslationList';\nimport TranslatorText from './translator-text/TranslatorText';\n\nconst eventSource =\n  new EventSource('http://localhost:5000/translations/stream') || undefined;\n\nconst Translator = () => {\n  const [loadingTranslations, setLoadingTranslations] = useState(true);\n  const [loadingNewTranslation, setLoadingNewTranslation] = useState(false);\n  const [sourceLanguage, setSourceLanguage] = useState('en');\n  const [targetLanguage, setTargetLanguage] = useState('es');\n  const [translationText, setTranslationText] = useState('');\n  const [translationList, setTranslationList] = useState([]);\n  const [deleteLoading, setDeleteLoading] = useState(false);\n\n  const notify = message => toast(`${message}`, { type: 'error' });\n\n  const swapLanguage = () => {\n    const source = sourceLanguage;\n    const target = targetLanguage;\n    setSourceLanguage(target);\n    setTargetLanguage(source);\n  };\n\n  const handleTextChange = event => {\n    if (event.target.value.length > 5000) {\n      return;\n    }\n    setTranslationText(event.target.value);\n  };\n\n  const handleTextSubmit = async event => {\n    event.preventDefault();\n    if (!translationText) {\n      return;\n    }\n    setLoadingNewTranslation(true);\n\n    try {\n      const response = await axios.post('/translations/', {\n        text: translationText,\n        source_language: sourceLanguage,\n        target_language: targetLanguage,\n      });\n      const newTranslation = response.data;\n\n      setTranslationText('');\n      setTranslationList(oldList =>\n        [newTranslation, ...oldList].sort(sortByTranslatedText)\n      );\n    } catch (error) {\n      notify('Could not submit translation!');\n    }\n    setLoadingNewTranslation(false);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter' && event.shiftKey === false) {\n      event.preventDefault();\n      handleTextSubmit(event);\n    }\n  };\n\n  const handleTextClear = event => {\n    event.preventDefault();\n    if (!translationText) {\n      return;\n    }\n    setTranslationText('');\n  };\n\n  const deleteTranslation = async translationUid => {\n    setDeleteLoading(true);\n    const response = await axios.delete(\n      `/translations/delete/${translationUid}`\n    );\n\n    if (response.data.message === 'success') {\n      setTranslationList(oldList =>\n        [...oldList].filter(translation => translation.uid !== translationUid)\n      );\n    } else {\n      notify('Could not delete translation!');\n    }\n    setDeleteLoading(false);\n  };\n\n  useEffect(() => {\n    const upsertTranslations = updatedTranslations => {\n      const currentTranslations = [...translationList];\n      updatedTranslations.forEach(updatedTranslation => {\n        const translationIndex = currentTranslations.findIndex(\n          x => x.uid === updatedTranslation.uid\n        );\n        currentTranslations[translationIndex] = updatedTranslation;\n      });\n      setTranslationList([...currentTranslations].sort(sortByTranslatedText));\n    };\n    if (eventSource) {\n      eventSource.onmessage = event => {\n        upsertTranslations(JSON.parse(event.data));\n      };\n    }\n  }, [translationList]);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    async function fetchTranslations() {\n      try {\n        const response = await axios.get('/translations/');\n        if (!didCancel) {\n          // Ignore if we started fetching something else\n          setTranslationList(response.data.sort(sortByTranslatedText));\n        }\n      } catch (error) {\n        notify('Could not fetch translations!');\n      }\n    }\n\n    fetchTranslations();\n    setLoadingTranslations(false);\n    return () => {\n      didCancel = true;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div className=\"lg:max-w-3xl w-full lg:rounded lg:overflow-hidden lg:mt-10 lg:shadow-xl\">\n        <LanguageBar\n          sourceLanguage={sourceLanguage}\n          targetLanguage={targetLanguage}\n          onClick={swapLanguage}\n        ></LanguageBar>\n        <TranslatorText\n          translationText={translationText}\n          handleChange={handleTextChange}\n          handleSubmit={handleTextSubmit}\n          handleClear={handleTextClear}\n          handleKeyDown={handleKeyDown}\n          loading={loadingNewTranslation}\n        ></TranslatorText>\n      </div>\n      <div className=\"lg:max-w-3xl w-full lg:my-10\">\n        <Flipper\n          flipKey={translationList.map(translation => translation.uid).join('')}\n        >\n          <TranslationList\n            loading={loadingTranslations}\n            translations={translationList}\n            deleteTranslation={deleteTranslation}\n            deleteLoading={deleteLoading}\n          ></TranslationList>\n        </Flipper>\n      </div>\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        pauseOnVisibilityChange\n        draggable\n        pauseOnHover\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Translator;\n","import React from 'react';\nimport Header from '../header/Header';\nimport Translator from '../translator/Translator';\n\nconst Application = () => (\n  <div className=\"bg-white lg:bg-gray-200 h-full flex flex-col items-center min-h-screen\">\n    <Header></Header>\n    <Translator></Translator>\n  </div>\n);\n\nexport default Application;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/tailwind.css';\nimport Application from './components/application/Application';\nimport * as serviceWorker from './serviceWorker';\n\naxios.defaults.baseURL = process.env.REACT_APP_FLASK_URL;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}